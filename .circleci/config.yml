version: 2

consts:
  run-on-tags: &run-on-tags
    filters:
      tags:
        only: /.*/
  defaults: &defaults
    docker:
      - image: node:10

workflows:
  version: 2
  everything:
    jobs:
      - yarn-deps:
          <<: *run-on-tags
      - lint-css:
          <<: *run-on-tags
          requires:
            - yarn-deps
      - lint-js:
          <<: *run-on-tags
          requires:
            - yarn-deps
      - css:
          <<: *run-on-tags
          requires:
            - yarn-deps
      - icons:
          <<: *run-on-tags
          requires:
            - yarn-deps
      - example-site:
          <<: *run-on-tags
          requires:
            - css
            - icons
      - deploy-example-site:
          requires:
            - yarn-deps
            - css
            - icons
            - lint-js
            - lint-css
            - example-site
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - npm-publish:
          requires:
            - yarn-deps
            - css
            - icons
            - lint-js
            - lint-css
            - example-site
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

jobs:
  yarn-deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-v2
      - run: |
          mkdir -p dist
          yarn install --cache-folder .yarn-cache
          mv node_modules dist/node_modules
      - persist_to_workspace:
          root: 'dist'
          paths:
            - 'node_modules'
      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - .yarn-cache

  lint-js:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: |
          mv dist/node_modules node_modules
          yarn lint:js

  lint-css:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: |
          mv dist/node_modules node_modules
          yarn lint:sass

  css:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: |
          mv dist/node_modules node_modules
          ./node_modules/.bin/gulp sass
          mkdir dist/css
          mv static/css/* dist/css/
      - persist_to_workspace:
          root: 'dist'
          paths:
            - css

  icons:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace: {at: dist}
      - run: |
          mv dist/node_modules node_modules
          ./node_modules/.bin/gulp icons
          mkdir dist/icons
          mv layouts/partials/icons-bundle.svg dist/icons/
      - persist_to_workspace:
          root: 'dist'
          paths:
            - icons

  example-site:
    docker:
      - image: jguyomard/hugo-builder:0.42-extras
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          mkdir -p static/css/
          mv dist/css/* static/css/
          mv dist/icons/icons-bundle.svg layouts/partials/
          hugo -s example -d ../dist/public/
      - persist_to_workspace:
          root: dist
          paths:
            - public

  deploy-example-site:
    docker:
      - image: golang
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          mv dist/node_modules node_modules
          go get github.com/netlify/netlifyctl
          netlifyctl deploy -y \
            -P dist/public \
            -s ba1989e3-bab2-47d9-bc9a-bbdbc2065a83 \
            -A "$NETLIFY_AUTH_TOKEN"

  npm-publish:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          mkdir -p static/css/
          mv dist/css/* static/css/
          mv dist/icons/icons-bundle.svg layouts/partials/
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
          npm publish
